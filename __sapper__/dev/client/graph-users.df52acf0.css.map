{
  "version": 3,
  "file": "graph-users.df52acf0.css",
  "sources": [
    "../../../../../../src/routes/graph-users.svelte"
  ],
  "sourcesContent": [
    "<style>\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n\n  body {\n    font: 13px \"Noto Sans\";\n    background:black;\n  }\n\n  .main {\n    display: flex;\n    flex-direction: column;\n    justify-content: top;\n    align-items: center;\n    height: 100vh;\n  }\n\n  form {\n    background: #01b3ed;\n    padding: 3px;\n    width: 100%;\n\t\tdisplay: flex;\n  }\n\n  form input {\n    border: 0;\n    padding: 10px;\n    width: 90%;\n    margin-right: 0.5%;\n    background: #b34e7e;\n    color: #fff8b8;\n\t\tfont-size: 14px;\n\t}\n\n\t@media screen and (device-aspect-ratio: 375/667) {\n\t\tform input {\n\t\t\tfont-size: 16px;\n\t\t}\n\t}\n\n  form button {\n    background: #fff8b8;\n    border: none;\n    padding: 10px 15px;\n    color: #01b3ed;\n  }\n\n\t#chatWindow {\n\t\theight: 350px;\n    width: 100%;\n    border: 3px solid #01b3ed;\n\t\toverflow: auto;\n\t}\n\n\t@media (min-height: 845px) {\n\t\t#chatWindow {\n\t\t\theight: 600px;\n\t\t}\n\t}\n\n  #messages {\n\t\talign-self: center;\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    font-size: 14px;\n  }\n\n  #messages li {\n    padding: 5px 10px;\n\t\tborder-radius: 1em;\n\t\tmargin: 0.5em auto;\n\t\twidth: 95%;\n    background: #fff8b8;\n    color: #01b3ed;\n\t\toverflow-wrap: break-word;\n  }\n\n  #messages li:nth-child(odd) {\n    background: #01b3ed;\n    color: #fff8b8;\n  }\n\n  ::placeholder {\n    color: #fff8b8;\n  }\n\n\t#numUsers {\n\t\tcolor: #fff8b8;\n\t\tpadding: 1em;\n\t\tfont-size: 14px;\n\t}\n\n  .graph {\n    background-color: black;;\n    height:300px;\n    width:100%;\n  }\n</style>\n\n<svelte:head>\n  <title>Chat App</title>\n  <link\n    href=\"https://fonts.googleapis.com/css?family=Bungee+Outline|Noto+Sans&display=swap\"\n    rel=\"stylesheet\" />\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n</svelte:head>\n\n<svelte:window on:unload={emitUserDisconnect}/>\n\n<script>\n\n  import { onMount } from 'svelte';\n \timport * as vis from 'vis-network';\n  import io from \"socket.io-client\";\n\timport { fade } from \"svelte/transition\";\n\t\n  import Heading from \"../components/Heading.svelte\";\n  \n\n  \n\n  var data = {\n    nodes: new vis.DataSet([\n      {id:0, label:'Hello'}]\n      ),\n    edges: new vis.DataSet()\n  };\n\n  let options = {\n    physics:{\n    enabled: true,\n  /*  barnesHut: {\n      gravitationalConstant: -2000,\n      centralGravity: 0.3,\n      springLength: 95,\n      springConstant: 0.04,\n      damping: 0.09,\n      avoidOverlap: 0.0\n    }\n    */\n    }, \n   autoResize: true,\n            height: '100%',\n            width: '100%',\n    interaction: { multiselect: true },\n    nodes:{\n      font: {color: '#ffffff'},\n      shapeProperties: {\n              useBorderWithImage:false,\n              interpolation:true\n      },\n      //color:'#0077C8' \n      color: '#33333333'\n    }, edges: {\n      color: \"0077C8\"\n      ,smooth: { enabled: true}\n    }\n  };\n\n\n\n\n  let network;\n\n  onMount(async () => {\n    // create a network\n    var container = document.getElementById('mynet');\n    //alert(JSON.stringify(data));\n    network = new vis.Network(container, data, {});    \n    network.on(\"select\", function (params) {\n      // nodeSelection.selectNode(params.nodes[0]);\n      //  selection = params;\n    });\n\n\n  \n\n    setTimeout(() => {\n          network.fit();\n        }, 1000);\n  \n  });\n  \n\n\n\tconst socket = io();\n\n\tconst placeholder = \"Type your message here...\";\n\tconst greeting = `You have joined the chat. Use '/nick your_nickname' to set your nickname!`\n  let messages = [greeting];\n\tlet message = \"\";\n\tlet name = 'Anonymous';\n  let numUsersConnected = 0;\n  \n  let nodeMe={};\n\n  socket.on(\"message\", function(message) {\t\t\n    messages = messages.concat(message);\n   // data.nodes.add({label: message})\n\t\tupdateScroll();\n  });\n  \n  socket.on(\"logged\", function(message) {\t\t\n   // messages = messages.concat(message);\n    \n    if (message.isMe) \n    {\n      // replace default node with received node from server\n      message.id = 0 \n    };\n\n    data.nodes.update(message);\n\n    if (!message.isMe) {\n      data.edges.add({from: message.id, to:0});\n    }\n\n    \n    messages = messages.concat(JSON.stringify(message));\n    \n    updateScroll();\n     \n\t});\n\t\n\tsocket.on(\"user joined\", function({message, numUsers}) {\n\t\tmessages = messages.concat(message);\n    numUsersConnected = numUsers;\n  //  data.nodes.add({label: message})\n\t\tupdateScroll();\n\t});\n\n\tsocket.on(\"user left\", function(numUsers) {\n\t\tnumUsersConnected = numUsers;\n\t\tupdateScroll();\n\t});\n\n\tfunction emitUserDisconnect() {\n\t\tsocket.emit('user disconnect', name); \n\t}\n\n  function handleSubmit() {\n\t\tmessage = message.trim();\n\t\t\n\t\tif (message == '') {\n\t\t\treturn;\n\t\t}\n\n\t\tlet messageString = `${name}: ${message}`;\n\n\t\tif (message.slice(0, 5) == '/nick') {\n\t\t\tlet newName = message.slice(6);\n      messageString = `Server: ${name} changed their nickname to ${newName}`;\n    \n      name = newName;\n        socket.emit(\"login\", name);\n      \n\t\t}\n\n\t\tmessages = messages.concat(messageString);\n\t\tsocket.emit(\"message\", messageString);\n\n\t\tupdateScroll();\n\n\t\tmessage = \"\";\n\t}\n\t\n\tfunction updateScroll() {\n\t\tconst chatWindow = document.getElementById('chatWindow');\n\t\tsetTimeout(() => {\n\t\t\tchatWindow.scrollTop = chatWindow.scrollHeight;\t\t\t\n\t\t}, 0);\n\t}\n</script>\n\n<body>\n  <div class=\"graph\" id=\"mynet\"></div>\n  <div class=\"main\">\n   \n    <div id=\"chatWindow\">\n      <ul id=\"messages\">\n        {#each messages as message}\n          <li transition:fade>{message}</li>\n        {/each}\n      </ul>\n    </div>\n    <form action=\"\">\n      <input id=\"m\" autocomplete=\"off\" {placeholder} bind:value={message} />\n      <button on:click|preventDefault={handleSubmit}>Send</button>\n    </form>\n\t\t<p id=\"numUsers\">There {numUsersConnected == 1 ? 'is' : 'are'} {numUsersConnected} {numUsersConnected == 1 ? 'user' : 'users'} currently chatting!</p>\n  </div>\n</body>\n"
  ],
  "names": [],
  "mappings": "AACE,eAAE,CAAC,AACD,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,UAAU,CACtB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,IAAI,CAAE,IAAI,CAAC,WAAW,CACtB,WAAW,KAAK,AAClB,CAAC,AAED,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,GAAG,CACpB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,KAAK,AACf,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,GAAG,CACZ,KAAK,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,AACb,CAAC,AAED,mBAAI,CAAC,KAAK,eAAC,CAAC,AACV,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,GAAG,CACV,YAAY,CAAE,IAAI,CAClB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CAChB,SAAS,CAAE,IAAI,AAChB,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,sBAAsB,OAAO,CAAC,AAAC,CAAC,AACjD,mBAAI,CAAC,KAAK,eAAC,CAAC,AACX,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC,AAEA,mBAAI,CAAC,MAAM,eAAC,CAAC,AACX,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,KAAK,CAAE,OAAO,AAChB,CAAC,AAEF,WAAW,eAAC,CAAC,AACZ,MAAM,CAAE,KAAK,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC3B,QAAQ,CAAE,IAAI,AACf,CAAC,AAED,MAAM,AAAC,aAAa,KAAK,CAAC,AAAC,CAAC,AAC3B,WAAW,eAAC,CAAC,AACZ,MAAM,CAAE,KAAK,AACd,CAAC,AACF,CAAC,AAEA,SAAS,eAAC,CAAC,AACX,UAAU,CAAE,MAAM,CAChB,eAAe,CAAE,IAAI,CACrB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,wBAAS,CAAC,EAAE,eAAC,CAAC,AACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACnB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,KAAK,CAAC,IAAI,CAClB,KAAK,CAAE,GAAG,CACR,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CAChB,aAAa,CAAE,UAAU,AACzB,CAAC,AAED,wBAAS,CAAC,iBAAE,WAAW,GAAG,CAAC,AAAC,CAAC,AAC3B,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,AAChB,CAAC,eAED,aAAa,AAAC,CAAC,AACb,KAAK,CAAE,OAAO,AAChB,CAAC,AAEF,SAAS,eAAC,CAAC,AACV,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,IAAI,AAChB,CAAC,AAEA,MAAM,eAAC,CAAC,AACN,gBAAgB,CAAE,KAAK,CACvB,OAAO,KAAK,CACZ,MAAM,IAAI,AACZ,CAAC"
}